#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.9.1)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

from sac import SACService
from sac.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print ''
  print 'Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] function [arg1 [arg2...]]'
  print ''
  print 'Functions:'
  print '  out_apiauth apiAuth(string token, string apicode, string appkey)'
  print '  out_createtoken createToken(in_createtoken inpara, in_storetokeninfo inpara_add)'
  print '  out_createtoken getToken(in_createtoken inpara)'
  print '  out_createtoken deleteToken(in_createtoken inpara)'
  print ''
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9090
uri = ''
framed = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  if url[4]:
    uri += '?%s' % url[4]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = SACService.Client(protocol)
transport.open()

if cmd == 'apiAuth':
  if len(args) != 3:
    print 'apiAuth requires 3 args'
    sys.exit(1)
  pp.pprint(client.apiAuth(args[0],args[1],args[2],))

elif cmd == 'createToken':
  if len(args) != 2:
    print 'createToken requires 2 args'
    sys.exit(1)
  pp.pprint(client.createToken(eval(args[0]),eval(args[1]),))

elif cmd == 'getToken':
  if len(args) != 1:
    print 'getToken requires 1 args'
    sys.exit(1)
  pp.pprint(client.getToken(eval(args[0]),))

elif cmd == 'deleteToken':
  if len(args) != 1:
    print 'deleteToken requires 1 args'
    sys.exit(1)
  pp.pprint(client.deleteToken(eval(args[0]),))

else:
  print 'Unrecognized method %s' % cmd
  sys.exit(1)

transport.close()
