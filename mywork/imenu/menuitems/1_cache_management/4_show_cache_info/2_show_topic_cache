#!/usr/bin/env python

import os
import sys
import json
import importlib

if 'kernel' not in os.environ:
    print "cannot find kernel path in environ"
    exit(0)
    
kernel_path = os.environ['kernel']
sys.path.append(kernel_path)

from df.datamodel.schema import SCHEMA
from df.datamodel.schema import DATATYPE
import df.data_function as data_function
from df.data_descriptor import DataDesc
from core.cache import Cache_Service
    
detail_schema_name = "schema_topic_info"
detail_data_type = "data_type_all_by_strategy_id"

welcome = (
    '''  +-------------------------------------------\n'''
    '''   CACHE SHOWN FOR THE TOPIC DETAIL PAGE\n'''
    '''  -------------------------------------------+\n''')

if __name__ == "__main__":
    print welcome
    tid = raw_input("show the topic detail page, enter the topic id: ")
    print
    
    if not hasattr(SCHEMA, detail_schema_name):
        print "no %s schema found"%detail_schema_name
        exit(0)
    if not hasattr(DATATYPE, detail_data_type):
        print "no %s datatype found"%detail_data_type
        exit(0)

    data_desc = DataDesc(SCHEMA.schema_topic_info,
                         DATATYPE.data_type_all_by_strategy_id)
    data_desc.setKey(1, tid)

    s = "schema={0} | datatype={1} | topicId={2} | cacheKey={3}".\
        format(data_desc.schema, data_desc.data_type, tid,
               data_function.make_hcached_key(
                   data_desc.schema, data_desc.data_type))

    print s
    print "-" * len(s)

    cachekey = data_function.make_hcached_key(data_desc.schema,
                                              data_desc.data_type)
    field = data_function.make_hcached_field(data_desc.getKeys())

    cache = Cache_Service()

    if not cache.hexists(cachekey, field):
        print "++ Cache is NOT EXIST for [ %s ], detail page FAIL to shown"%tid
        exit(0)

    j = cache.hget(cachekey, field)
    print "CONTENT: ", json.dumps(j, ensure_ascii=False)
    #print "CONTENT: ", json.dumps(j, indent=2, ensure_ascii=False)
    ttl = cache.ttl(cachekey)
    print "TTL: ", ttl
    
    print "++ Cache for detail page [ %s ] has been shown successfully"%tid

    
